So, I wrapped the pipeline in a couple of scripts.
2 files 
spatial___classify__TumorStroma__sigmabwppl_oct.R
6 kB RClick to view details


spatial___compute_Tumor_Stroma_area.R
13 kB RClick to view details


10:25
First I include the approach used to classify tumor / stroma. In brief what it does:
1) Compute foci’s (tumor islands)→ using dbscan (this is only if you have biopsy data / samples containing multiple ‘tissue islands’)
2) Compute optimal bandwiths to compute KDEs (this is by cross-validation, https://search.r-project.org/CRAN/refmans/spatstat.core/html/bw.ppl.html )
Bw.diggle → optimal bandwidths to compute KDEs
3) Classify tumor / stroma
Compare KDE of tumor and KDE of stroma with optimal bandwiths calculated on step 2
If normalized KDE(T) > normalized KDE(S)  tumor region
Else --> Stroma
The previous step is done by looking at the closest KDE pixel (of the KDE Tumor and KDE Stroma) from your input location
10:26
in your case, maybe you need to adapt it if you work with DCIS regions that are not commonly classified as ‘Tumor/Stroma’,
10:26
I also included a script to compute areas so you can use them to compute densities.
The idea here is:
Compute a KDE of the Tumor cells
Filter out normalized KDEs < 0.1
Out of the pixels that ‘survive’ this filtering, count them, and calculate its covered area accordingly